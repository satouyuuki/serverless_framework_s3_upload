service: myseverlessproject
app: myserverlessproject1
org: personlink

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  profile: default
  environment: 
    tableName: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: '*'
  apiGateway:
    shouldStartNameWithService: true
plugins: 
  - serverless-s3-sync
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

package: 
  individually: true

custom:
  tableName: playper-tables
  s3Sync: 
    - bucketName: yuuki-aws-dev.work
      localDir: UploadData
  dynamodb:
    stages:
      - test
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      development:
        sources:
          - table: jankens
            sources: [./migrations/jankens.json]
functions:
  getUser:
    handler: lambdas/endpoints/getUser.handler
    events:
      - http:
          path: get-user/{ID}
          method: GET
          cors: true
  getPlayerScore:
    handler: lambdas/endpoints/getPlayerScore.handler
    events:
      - http:
          path: get-player-score/{ID}
          method: GET
          cors: true
  createPlayerScore:
    handler: lambdas/endpoints/createPlayerScore.handler
    events:
      - http:
          path: create-player-score/{ID}
          method: POST
          cors: true

resources: 
  Resources:
    DemoBucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: yuuki-aws-dev.work
    JankensTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: jankens
        AttributeDefinitions:
          - AttributeName: player
            AttributeType: S
          - AttributeName: unixtime
            AttributeType: N
        KeySchema:
          - AttributeName: player
            KeyType: HASH
          - AttributeName: unixtime
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    # MyDynamoDbTable:
    #   Type: AWS::DynamoDB::Table
    #   Properties:
    #     TableName: ${self:custom.tableName}
    #     AttributeDefinitions:
    #       - AttributeName: ID
    #         AttributeType: S
    #     KeySchema:
    #       - AttributeName: ID
    #         KeyType: HASH
    #     BillingMode: PAY_PER_REQUEST